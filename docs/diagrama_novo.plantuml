@startuml diagrama_com_factory

'--------------------- Classes Baralho ---------------------
abstract class Baralho {
    - deck: List<Carta>

    + embaralhar() : void
    + distribuir() : Carta
    + adicionarCarta(carta: Carta) : void
    + obterTamanho() : int
}

class BaralhoTradicional {
    + BaralhoTradicional()
}

class BaralhoUNO {
    + BaralhoUNO()
}

'--------------------- Classes Carta ---------------------

abstract class Carta {
    - face : String
    - cor : Cor
    - valor : int

    + Carta(face: String, valor: int, cor : Cor)
    + getFace() : String
    + {abstract} getValor() : int
    + {abstract} getCor() : Cor
    + {abstract} toString() : String
}

class CartaTradicional extends Carta {
    - naipe : String

    + CartaTradicional(face: String, naipe : String, valor : int, cor : Cor)
    + CartaTradicional()
    + getNaipe() : String
}

class CartaUNO extends Carta {
    + CartaUNO(face: String, valor: int, cor : Cor)
    + CartaUNO()
}

enum TipoBaralho {
    UNO
    TRADICIONAL
}

enum Cor {
    PRETO
    VERMELHO
    AMARELO
    AZUL
    VERDE
    RESET

    - ansiCode : String
    - value : String

    + Cor(ansiCode : String, cor : String)
    + ansiCode() : String
    + getValue() : String
}

'--------------------- Builder Pattern ---------------------

interface BaralhoBuilder {
    + redefinir() : void
    + preencherBaralho() : void
}

class BaralhoTradicionalBuilder {
    - fabrica : CartaFactory
    - resultado : BaralhoTradicional

    + BaralhoTradicionalBuilder(fabrica: CartaFactory)
    + redefinir() : void
    - definirFaces() : void
    - criarDeckDeCartas() : void
    - criarRandomizador() : void
    + preencherBaralho() : void
    + obterResultado() : BaralhoTradicional
}

class BaralhoUNOBuilder {
    - fabrica : CartaFactory
    - resultado : BaralhoUNO

    - definirFaces() : void
    - criarRandomizador() : void
    - criarDeckDeCartas() : void
    + BaralhoUNOBuilder(fabrica: CartaFactory)
    + redefinir() : void
    + preencherBaralho() : void
    + obterResultado() : BaralhoUNO
}

class BaralhoDirector {
    - baralhoBuilder : BaralhoBuilder

    + BaralhoDirector(baralhoBuilder : BaralhoBuilder)
    + construirBaralho(tipo : TipoBaralho) : void
}

'--------------------- Factory Method ---------------------

interface CartaFactory {
    + criarCarta() : Carta
}

class CartaTradicionalFactory {
'    + criarCarta(face : String, valor : int, cor : Cor) : CartaTradicional
    + criarCarta() : CartaTradicional
}

class CartaUNOFactory {
'    + criarCarta(face : String, valor : int, cor : Cor) : CartaUNO
    + criarCarta() : CartaUNO
}


'--------------------- Cliente ---------------------

class MainBaralho {
    + {static} main(args : String[]) : void
}

'--------------------- Relacionamentos ---------------------

MainBaralho --> BaralhoDirector
BaralhoDirector --> BaralhoBuilder

BaralhoTradicional ..|> Baralho
BaralhoUNO ..|> Baralho

BaralhoTradicionalBuilder ..|> BaralhoBuilder
BaralhoUNOBuilder ..|> BaralhoBuilder

CartaTradicionalFactory ..|> CartaFactory
CartaUNOFactory ..|> CartaFactory

CartaFactory --> Carta

BaralhoTradicionalBuilder --> BaralhoTradicional
BaralhoUNOBuilder --> BaralhoUNO


@enduml
